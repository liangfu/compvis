
import os

print os.getcwd()
source_list=filter(lambda x:x[-4:]=='.cpp',os.listdir('src'))
source_list=map(lambda x:os.getcwd()+'/src/'+x,source_list)
source_list.insert(0,map(lambda x:os.getcwd()+'/.moc/'+x,
                         filter(lambda x:x[-4:]=='.cpp',os.listdir('.moc'))))
source_list.insert(0,map(lambda x:os.getcwd()+'/res/'+x,
                         filter(lambda x:x[-4:]=='.cpp',os.listdir('res'))))
print source_list
header_list=filter(lambda x:x[-2:]=='.h',os.listdir('include'))
header_list=map(lambda x:os.getcwd()+'/include/'+x,header_list)
print header_list

env=Environment()

env.Append(CPPPATH = ['.','/usr/include','include',
                      '../extern/cxcore/include',
                      '../extern/cv/include',
                      '../extern/highgui/include',
                      '../include', # compvis
                      '/usr/include/qt4/',
                      '/usr/include/qt4/QtCore',
                      '/usr/include/qt4/QtGui'])
debug = ARGUMENTS.get('debug', 1)
win32 = ARGUMENTS.get('win32', 0)

if int(debug):
  env.Append(CPPFLAGS = ['-g','-Wall'])
  env.Append(OBJPREFIX = '.obj_debug/')
else:
  env.Append(CPPFLAGS = ['-O2','-Wall'])
  env.Append(OBJPREFIX = '.obj_release/')

env.Append(LIBS = ['cxcore','cv','highgui','compvis','QtCore','QtGui'])  
env.Append(LIBPATH = ['/usr/lib','../lib'])
env.Append(RPATH = ['/usr/lib','.','../lib'])

env.Program(target='compvis-demo',source=source_list,header=header_list)
